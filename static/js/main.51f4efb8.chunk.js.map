{"version":3,"sources":["components/ParallaxDiv/parallax0.jpg","components/ParallaxDiv/parallax1.jpg","components/Navbar/index.js","components/ScrollingTags/index.js","utils/buildPath.js","components/HomeTab/index.js","components/ParallaxDiv/index.js","components/PortfolioCard/index.js","components/PortfolioTab/index.js","pages/Home/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","navlinks","className","to","type","data-toggle","data-target","id","map","navlink","key","smooth","charAt","toUpperCase","slice","ScrollingTags","state","options","index","setInterval","setState","length","this","React","Component","buildPath","path","process","HomeTab","divID","src","BuildPath","style","height","alt","ParallaxDiv","backgroundID","bgImage","require","strength","blur","min","max","PortfolioCard","assets","image","name","desc","href","link","rel","target","PortfolioTab","object","Home","useState","Footer","App","exact","component","from","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.51f4efb8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/parallax0.7804f289.jpg\";","module.exports = __webpack_public_path__ + \"static/media/parallax1.ac2516d8.jpg\";","import React from \"react\";\nimport { HashLink as Link } from 'react-router-hash-link';\n// import { Link } from \"react-router-dom\";\n\nfunction Navbar({ navlinks }) {\n  return(\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\n      <Link className=\"navbar-brand py-2\" to=\"/\">Garrett Roberts</Link>\n\n      {/* Navbar toggle Button */}\n      <button type=\"button\" className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navBarToggler\">\n        <span className=\"navbar-toggler-icon\">\n        </span>\n      </button>\n\n      {/* Nav Links */}\n      <div className=\"collapse navbar-collapse\" id=\"navBarToggler\">\n        <ul className=\"navbar-nav\">\n          {navlinks.map(navlink => {\n            return (\n              <li className=\"nav-item px-3\" key={navlink}>\n                <Link className=\"nav-link\" to={`/#${navlink}`} smooth=\"true\">\n                  {navlink.charAt(0).toUpperCase() + navlink.slice(1)}\n                </Link>\n              </li>\n            )\n          })}\n        </ul>\n      </div>\n    </nav>\n  )\n};\n\nexport default Navbar;","import React from \"react\";\n\nclass ScrollingTags extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      options: [\"MongoDB architect\", \"Node developer\", \"Javascript Fanatic\", \"ReactJS's #1 Fan\", \"Full-stack Developer\"],\n      index: 0,\n    };\n  };\n\n  componentDidMount() {\n    setInterval(() => {\n      this.setState({ index: (this.state.index + 1) % this.state.options.length });\n    }, 2000);\n  };\n\n  render() {\n    return(\n        <div className=\"col-lg-12 text-center text-primary bg-light\">\n          <div className=\"bg-primary rounded text-light\">\n            <h3 className=\"mt-5 pt-4\">Hello, I'm Garrett.</h3>\n            <h2 className=\"pb-4 mb-5\">\n              <strong>&lt;\n                  <span id=\"scrollingElement\"><strong>{this.state.options[this.state.index]}</strong></span>/&gt;\n                </strong>\n            </h2>\n          </div>\n        </div>\n    \n    );\n  };\n};\n\nexport default ScrollingTags;","const buildPath = function (path) {\n  return process.env.PUBLIC_URL + path;\n};\n\nexport default(buildPath)","import React from \"react\";\nimport ScrollingTags from \"../ScrollingTags\";\nimport BuildPath from \"../../utils/buildPath\";\n\nfunction HomeTab({ divID }) {\nreturn (\n  <div className=\"container-fluid\">\n    <div className=\"row mt-5 d-flex justify-content-center\" id={divID}>\n      <ScrollingTags />\n      <div className=\"col-lg-12 mb-5 bg-light text-center text-dark\">\n        <h2>About Me</h2>\n        <hr />\n        <img src={BuildPath(\"/assets/images/profile.jpg\")} className=\"rounded float-left img-fluid mr-4 mb-2\" style={{height: 175 + \"px\"}}\n          alt=\"profile\" />\n        <p className=\"text-left\">&emsp; Full-stack web developer making a switch from ministry to computer science.  Recently earned a certification in Full Stack Web Development from Vanderbilt University, where I gained competence in Javascript, CSS3, React.js, MySQL, MongoDB, node.js, and express servers.  Iâ€™ve actively used these skills to design and create full-scale web apps in coordination with remote teams using agile development methods.  In a recent project with two teammates, we designed and deployed a node app that alerts users when they have potentially crossed paths with someone else who has tested positive for Covid-19.   Equipped to work collaboratively either on-site or remotely in a team setting to ensure optimal results for user-centered and technology-centered designs.</p>\n      </div>\n    </div>\n  </div>\n)\n};\n\nexport default HomeTab;","import React from \"react\";\nimport { Parallax } from 'react-parallax';\n\nfunction ParallaxDiv({ backgroundID }) {\n\n  if (backgroundID === 0) {\n    return <Parallax bgImage={require('./parallax0.jpg')} strength={300} blur={{ min: -20, max: 20 }}>\n      <div style={{ height: '50vh' }} />\n    </Parallax>\n  } else if (backgroundID === 1) {\n    return <Parallax bgImage={require('./parallax1.jpg')} strength={300} blur={{ min: -20, max: 20 }}>\n      <div style={{ height: '50vh' }} />\n    </Parallax>\n  }\n};\n\nexport default ParallaxDiv;","import React from \"react\";\nimport \"./style.css\";\nimport buildPath from \"../../utils/buildPath\";\nfunction PortfolioCard({ assets }) {\n  return (\n  <div className=\"col-md-4\">\n    <article className=\"card\">\n      <img className=\"card-img-top\" src={buildPath(assets.image)} alt=\"{assets.name} screenshot\" />\n      <div className=\"card-body\">\n        <h4 className=\"card-title\">{assets.name}</h4>\n        <p className=\"card-text\">{assets.desc}</p>\n      </div>\n      <div className=\"card-footer\">\n        <a href={assets.link} className=\"btn btn-primary btn-lg btn-block\" rel=\"noopener noreferrer\" target=\"_blank\">See it here</a>\n      </div>\n    </article>\n  </div>\n  )\n};\n\nexport default PortfolioCard;","import React from \"react\";\nimport PortfolioCard from \"../PortfolioCard\";\n\nfunction PortfolioTab({ divID }) {\n\n  const portfolioData = [{\n    name: \"Novel-19\",\n    link: \"https://github.com/garrettmroberts/novel-19\",\n    image: \"/assets/images/novel19Screenshot.png\",\n    desc: \"This project was built in a small group of three.  It allows for multiple user instances, where each user can mark locations they have visited.  If a user tests positive for Covid-19, they can update their status and all of their locations are marked on a public map.  The goal is to make a safer way for people to find out if they'vecome ito contact with potentially infected persons within the last two weeks.\"\n  },\n  {\n    name: \"User Directory\",\n    link: \"https://github.com/garrettmroberts/user_directory\",\n    image: \"/assets/images/userDirectoryScreenshot.png\",\n    desc: \"This directory is built out of react components.  It can sort and filter any json file passe into it.  Because of it's modularity, any other json file can be fed to it, the table will populate dynamically, the sort filters work out of the box, and the filter functionality can work with minor tweaks.\"\n  },\n  {\n    name: \"Markdown Previewer\",\n    link: \"https://github.com/garrettmroberts/FreeCodeCamp-Projects/tree/master/markdownPreviewer\",\n    image: \"/assets/images/markdownGeneratorScreenshot.png\",\n    desc: \"A simple markown previewer.  Anything can be written into the input field, and the preview dynamically updates with that text parsed from markdown to html.  Good for making sure that a markdown file is visually appealing before pushing.\"\n  }];\n\n  return (\n    <div className=\"container-fluid bg-light py-3\" id={divID}>\n      <div className=\"row d-flex flex-column border\">\n        <h1 className=\"text-center text-dark\">Portfolio</h1>\n        <h2 className=\"text-center text-dark\">Here are some things I've been working on.</h2>\n      </div>\n      <div className=\"container-fluid\">\n        <div className=\"row d-flex\">\n          {portfolioData.map(object => {\n            return <PortfolioCard assets={object} />\n          })}\n        </div>\n      </div>\n\n      {/* <div className=\"row\">\n        <div className=\"col-lg-6  text-center\">\n          <figure>\n            <a href=\"#\">\n              <img src=\"https://via.placeholder.com/300x300\" className=\"img-fluid my-3 w-50 img-thumbnail\" />\n              <figcaption>\n                <h3 className=\"text-dark\">Project 1</h3>\n              </figcaption>\n            </a>\n          </figure>\n        </div>\n        <div className=\"col-lg-6 text-center\">\n          <figure>\n            <a href=\"#\">\n              <img src=\"https://via.placeholder.com/300x300\" className=\"img-fluid my-3 w-50 img-thumbnail\" />\n              <figcaption>\n                <h3 className=\"text-dark\">Project 2</h3>\n              </figcaption>\n            </a>\n          </figure>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-lg-6 text-center\">\n          <figure>\n            <a href=\"#\">\n              <img src=\"https://via.placeholder.com/300x300\" className=\"img-fluid my-3 w-50 img-thumbnail\" />\n              <figcaption>\n                <h3 className=\"text-dark\">Project 3</h3>\n              </figcaption>\n            </a>\n          </figure>\n        </div>\n        <div className=\"col-lg-6 text-center\">\n          <figure>\n            <a href=\"#\">\n              <img src=\"https://via.placeholder.com/300x300\" className=\"img-fluid my-3 w-50 img-thumbnail\" />\n              <figcaption>\n                <h3 className=\"text-dark\">Project 4</h3>\n              </figcaption>\n            </a>\n          </figure>\n        </div>\n      </div> */}\n    </div>\n  )\n};\n\nexport default PortfolioTab;","import React, { useState } from 'react';\nimport HomeTab from \"../../components/HomeTab\";\nimport ParallaxDiv from \"../../components/ParallaxDiv\";\nimport PortfolioTab from \"../../components/PortfolioTab\";\n\nfunction Home() {\n  const [appState, setAppState] = useState(\"home\");\n\n  return (\n    <div>\n      <HomeTab divID=\"home\" />\n      <ParallaxDiv backgroundID={0} />\n      <PortfolioTab divID=\"portfolio\" />\n      <ParallaxDiv backgroundID={1} />\n      {/* <ContactDiv /> */}\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\n\nfunction Footer() {\n  return(\n    <footer className=\"bg-dark\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <ul className=\"nav justify-content-center\">\n              <li className=\"nav-item\">\n                <a href=\"https://github.com/garrettmroberts\" className=\"text-light nav-link\">\n                  <span className=\"fa fa-github fa-2x\" />\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a href=\"https://www.linkedin.com/in/garrett-roberts-b45640186/\" className=\"text-light nav-link\">\n                  <span className=\"fa fa-linkedin fa-2x\" />\n                </a>\n              </li>\n              <li>\n                <a href=\"https://www.freecodecamp.org/garrettmroberts\" className=\"text-light nav-link\">\n                  <span className=\"fa fa-free-code-camp fa-2x\"/>\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 text-center text-light\">\n            <p>Made with &hearts; in Nashville, TN</p>\n          </div>\n        </div>\n      </div>\n    </footer>\n  )\n};\n\nexport default Footer;","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./pages/Home\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  const [appState, setAppState] = useState(\"home\");\n\n  return (\n    <Router>\n      <div>\n        <Navbar navlinks={[\"home\", \"portfolio\", \"contact\"]} />\n        <Route exact path={[\"/\", \"/about\"]} component={Home} />\n        <Redirect from=\"/personalPortfolio\" to=\"/\" />\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router, Route, hashHistory } from 'react-router';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}